{"version":3,"sources":["serviceWorker.js","components/navbar/categoriesList.js","actions/index.js","constants/constants.js","components/navbar/navbar.js","components/newsfeed/article.js","components/newsfeed/articlesList.js","components/app.js","reducers/articlesReducer.js","reducers/categoriesReducer.js","reducers/selectedCategoryReducer.js","index.js"],"names":["Boolean","window","location","hostname","match","CategoriesList","classes","makeStyles","theme","root","flexGrow","width","backgroundColor","palette","background","paper","marginBottom","useStyles","StyledTabs","withStyles","minHeight","indicator","props","Tabs","TabIndicatorProps","children","StyledTab","margin","padding","color","primary","main","opacity","selected","Tab","disableRipple","categories","useSelector","state","useState","value","setValue","dispatch","useDispatch","className","AppBar","position","elevation","square","onChange","event","newValue","variant","scrollButtons","aria-label","map","category","index","key","label","onClick","type","payload","selectCategory","id","tabProps","NavBar","left","transform","zIndex","breakpoints","up","top","down","menuButton","marginRight","spacing","loginButton","marginLeft","title","anchorEl","setAnchorEl","handleClose","Toolbar","IconButton","edge","Typography","aria-controls","aria-haspopup","currentTarget","Menu","keepMounted","open","onClose","MenuItem","Article","item","avatarImg","objectFit","link","textDecoration","date","moment","article","format","Grid","xs","Card","CardHeader","avatar","Avatar","img","alt","src","action","Link","href","target_url","target","rel","subheader","source_name","ArticlesList","articlesContainer","height","overflowY","marginTop","boxShadow","webkitBoxShadow","outline","borderRadius","articles","selectedCategory","useEffect","fetch","then","response","json","container","onScroll","filter","slice","App","Container","maxWidth","articlesReducer","undefined","categoriesReducer","Set","unshift","selectedCategoryReducer","middlewares","applyMiddleware","reduxPromise","logger","reducers","combineReducers","ReactDOM","render","store","createStore","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eb86d7c0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, {useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectCategory} from \"../../actions\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n\nexport default function CategoriesList() {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            flexGrow: 1,\n            width: '100%',\n            backgroundColor: theme.palette.background.paper,\n            marginBottom: \"6px\",\n        },\n    }));\n    const classes = useStyles();\n\n    const StyledTabs = withStyles((theme) => ({\n        root: {\n            minHeight: \"40px\",\n        },\n        indicator: {\n            backgroundColor: 'transparent',\n        },\n    }))((props) => <Tabs {...props} TabIndicatorProps={{ children: <div /> }} />);\n\n    const StyledTab = withStyles((theme) => ({\n        root: {\n            margin: \"auto\",\n            padding: \"2px 12px\",\n            minHeight: \"40px\",\n            '&:hover': {\n                color: theme.palette.primary.main,\n                opacity: 1,\n            },\n            '&$selected': {\n                color: theme.palette.primary.main,\n            },\n            '&:focus': {\n                color: theme.palette.primary.main,\n            },\n        },\n        selected: {},\n    }))((props) => <Tab disableRipple {...props} />);\n\n    const categories = useSelector(state => state.categories)\n\n    const [value, setValue] = useState(0)\n    const dispatch = useDispatch()\n\n    const handleChange = (event, newValue) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" color=\"default\" elevation={1} square>\n                <StyledTabs\n                    value={value}\n                    onChange={handleChange}\n                    variant=\"scrollable\"\n                    scrollButtons=\"auto\"\n                    aria-label=\"scrollable auto tabs example\"\n                >\n                    {\n                        categories.map((category, index) => {\n                            return <StyledTab\n                                key={`${category}${index}`}\n                                label={category}\n                                onClick={() => { dispatch(selectCategory(category)) }}\n                                {...tabProps(index)}\n                            />\n                        })\n                    }\n                </StyledTabs>\n            </AppBar>\n        </div>\n    );\n}\n\nfunction tabProps(index) {\n    return {\n        id: `scrollable-auto-tab-${index}`,\n        'aria-controls': `scrollable-auto-tabpanel-${index}`,\n    };\n}\n\n","import {\n    FETCH_ARTICLES, SELECT_CATEGORY\n} from \"../constants/constants\";\n\nconst fetchArticles = () => {\n    // const promise = fetch(`https://go-gin-newsfeed.herokuapp.com/api/v1/articles`)\n    const promise = fetch(`https://go-gin-newsfeed.herokuapp.com/api/v1/articles`)\n        .then(response => response.json());\n\n    return {\n        type: FETCH_ARTICLES,\n        payload: promise\n    }\n};\n\nconst selectCategory = (category) => {\n    return {\n        type: SELECT_CATEGORY,\n        payload: category\n    }\n}\n\nexport {\n    fetchArticles, FETCH_ARTICLES,\n    selectCategory, SELECT_CATEGORY\n}\n","const FETCH_ARTICLES = \"FETCH_ARTICLES\"\nconst SELECT_CATEGORY = \"SELECT_CATEGORY\"\n\nexport {\n    FETCH_ARTICLES, SELECT_CATEGORY\n}","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AccountCircle from '@material-ui/icons/AccountCircle';\nimport CategoriesList from \"./categoriesList\";\n\nconst NavBar = () => {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n            flexGrow: 1,\n            position: 'fixed',\n            left: \"50%\",\n            transform: \"translateX(-50%)\",\n            zIndex: '1100',\n            [theme.breakpoints.up('md')]: {\n                top: \"10px\",\n                width: '940px',\n            },\n            [theme.breakpoints.down('md')]: {\n                width: '100%',\n                top: \"0%\",\n            },\n        },\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        loginButton: {\n            marginLeft: theme.spacing(2),\n        },\n        title: {\n            flexGrow: 1,\n        },\n    }));\n    const classes = useStyles();\n\n    const [anchorEl, setAnchorEl] = useState(null);\n\n    const handleClick = (event) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" square elevation={1}>\n                <Toolbar variant=\"dense\">\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Newsfeedredeploy\n                    </Typography>\n                    <div>\n                        <IconButton\n                            className={classes.loginButton}\n                            edge=\"end\"\n                            aria-label=\"account\"\n                            aria-controls=\"session-menu\"\n                            aria-haspopup=\"true\"\n                            color=\"inherit\"\n                            onClick={handleClick}\n                        >\n                            <AccountCircle />\n                        </IconButton>\n                        <Menu\n                            id=\"session-menu\"\n                            anchorEl={anchorEl}\n                            keepMounted\n                            open={Boolean(anchorEl)}\n                            onClose={handleClose}\n                        >\n                            <MenuItem onClick={handleClose}>Profile</MenuItem>\n                            <MenuItem onClick={handleClose}>My account</MenuItem>\n                            <MenuItem onClick={handleClose}>Logout</MenuItem>\n                        </Menu>\n                    </div>\n                </Toolbar>\n            </AppBar>\n            <CategoriesList />\n        </div>\n    );\n}\n\nexport default  NavBar","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport moment from \"moment\";\n\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Grid from \"@material-ui/core/Grid\";\n\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\nimport {Link} from \"@material-ui/core\";\n\n\nconst Article = (props) => {\n    const useStyles = makeStyles((theme) => ({\n        item: {\n            marginRight: '12px',\n            marginLeft: '12px',\n        },\n        avatarImg:{\n            objectFit: 'contain',\n        },\n        link: {\n            textDecoration: 'none',\n            '&:hover': {\n                color: theme.palette.primary.main,\n                textDecoration: 'none',\n            }\n        },\n    }));\n\n    const classes = useStyles();\n    const date = moment(props.article.date).format('DD/MM')\n    // const time = moment(props.article.date).format('HH:mm')\n\n    return (\n        <Grid item xs={12} classes={{item: classes.item}}>\n            <Card elevation={1}>\n                <CardHeader\n                    avatar={\n                        <Avatar\n                            classes={{img: classes.avatarImg}}\n                            variant=\"square\"\n                            alt={`${props.article.category}-logo`}\n                            src={`./assets/${props.article.category}_logo.svg`}/>\n                    }\n                    action={\n                        <div>\n                            <IconButton>\n                                <BookmarkIcon />\n                            </IconButton>\n                        </div>\n                    }\n                    title={\n                        <Link\n                            className={classes.link}\n                            href={`${props.article.target_url}`}\n                            target=\"_blank\"\n                            rel=\"noreferrer\"\n                            color=\"inherit\"\n                        >\n                            {props.article.title}\n                        </Link>\n                    }\n                    subheader={`${props.article.source_name} - ${date}`}\n                />\n            </Card>\n        </Grid>\n    );\n}\n\nexport default Article;\n","import React, {useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\nimport Grid from \"@material-ui/core/Grid\";\n\nimport Article from \"./article\";\nimport {fetchArticles} from \"../../actions\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst ArticlesList = () => {\n    const useStyles = makeStyles((theme) => ({\n        articlesContainer: {\n            height: 'calc(100vh - 110px)',\n            overflowY: 'scroll',\n            [theme.breakpoints.down('md')]: {\n                marginTop: \"100px\",\n            },\n            [theme.breakpoints.up('md')]: {\n                marginTop: \"110px\",\n            },\n            [theme.breakpoints.up('sm')]: {\n                '&::-webkit-scrollbar': {\n                    width: '0.4em',\n                },\n                '&::-webkit-scrollbar-track': {\n                    boxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)',\n                    webkitBoxShadow: 'inset 0 0 6px rgba(0,0,0,0.00)'\n                },\n                '&::-webkit-scrollbar-thumb': {\n                    backgroundColor: 'rgba(0,0,0,.1)',\n                    outline: '1px solid slategrey',\n                    borderRadius: '8px',\n                },\n            },\n        },\n    }));\n    const classes = useStyles();\n\n    const articles = useSelector(state => state.articles);\n    const category = useSelector(state => state.selectedCategory);\n    const dispatch = useDispatch();\n    const articlesLimit = 15;\n    // const limitedArticles = articles.slice(0, articlesLimit);\n\n    useEffect(()=> {\n        dispatch(fetchArticles());\n    }, [dispatch])\n\n    const handleScroll = () => {\n    }\n\n    return(\n        <Grid container spacing={1}  className={classes.articlesContainer} onScroll={handleScroll}>\n            {\n                articles.filter(article => category === 'all' ? true : article.category === category).slice(0, articlesLimit)\n                        .map((article, index) => <Article key={`${article.date}&${index}`} article={article}/>)\n            }\n        </Grid>\n    )\n}\n\nexport default ArticlesList;","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport NavBar from \"./navbar/navbar\";\nimport ArticlesList from \"./newsfeed/articlesList\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst App = () => {\n    const useStyles = makeStyles((theme) => ({\n        articlesContainer: {\n            padding: '0px 12px',\n        },\n    }));\n    const classes = useStyles();\n\n    return (\n        <div>\n            <Container maxWidth={'md'}>\n                <NavBar />\n            </Container>\n            <Container maxWidth={'md'} className={classes.articlesContainer}>\n                <ArticlesList/>\n            </Container>\n        </div>\n    )\n}\n\nexport default App;","import {FETCH_ARTICLES} from \"../actions\";\n\nconst articlesReducer = (state, action) => {\n    if (state === undefined) {\n        return {};\n    }\n\n    switch (action.type) {\n        case FETCH_ARTICLES:\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport default articlesReducer;","import {FETCH_ARTICLES} from \"../constants/constants\";\n\nconst categoriesReducer = (state, action) => {\n    if (state === undefined) {\n        return {};\n    }\n\n\n\n    switch (action.type) {\n        case FETCH_ARTICLES:\n            let categories = [...new Set(action.payload.map(article => article.category))];\n            categories.unshift('all');\n            return categories\n        default:\n            return state;\n    }\n};\n\nexport default categoriesReducer;","import {SELECT_CATEGORY} from \"../constants/constants\";\n\nconst selectedCategoryReducer = (state, action) => {\n    if (state === undefined) {\n        return {};\n    }\n\n    switch (action.type) {\n        case SELECT_CATEGORY:\n            return action.payload;\n        default:\n            return state;\n    }\n};\n\nexport default selectedCategoryReducer;","import './index.css';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { logger } from 'redux-logger';\nimport reduxPromise from 'redux-promise';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport App from \"./components/app\";\n\nimport articlesReducer from \"./reducers/articlesReducer\";\nimport categoriesReducer from \"./reducers/categoriesReducer\";\nimport selectedCategoryReducer from \"./reducers/selectedCategoryReducer\";\n\nconst middlewares = applyMiddleware(reduxPromise, logger);\n\nconst reducers = combineReducers({\n    articles: articlesReducer,\n    categories: categoriesReducer,\n    selectedCategory: selectedCategoryReducer,\n});\n\nconst initialState = {\n    articles: [],\n    categories: [],\n    selectedCategory: 'all',\n};\n\nReactDOM.render(\n    <Provider store={createStore(reducers, initialState, middlewares)}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}